<File version="3.2">
  <FileID>4952fd81-5924-48a7-be68-0859074cbcd2</FileID>
  <Preview>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
VZPLHREASm/bO1JBgFJKKaXPVlWTb0tt/tUCQL2qA0oppZQ+X+rV7KcaAFS6oJRSSunzpV7NfqoB
gFJKKaUvhgwAlFJKqRPKAEAppZQ6oY8dAHLyb+PW7SptQ0oppZS+mKpani01/ZECQI8ePUypN7K0
DVRqoJRSSumLqarlqWlZ6N69h7muzD+cdu3aZfTs2et2z549b6vEQCmllNIXVFXLpaar2l5X5gkh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIed75h3/4/wMwP1mAPdT/QwAAAABJRU5ErkJggg==</Preview>
  <Form>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</Form>
  <Code><![CDATA[
$formAutoMate_Load={
	#TODO: Initialize Form Controls here
	Set-ControlTheme $formAutoMate -Theme Dark
}

$darkToolStripMenuItem_Click={
	#TODO: Place custom script here
	Set-ControlTheme -Control $formAutoMate -Theme Dark
}

$lightToolStripMenuItem_Click={
	Set-ControlTheme -Control $formAutoMate -Theme Light
}

#region Control Theme Helper Function
<#
	.SYNOPSIS
		Applies a theme to the control and its children.
	
	.PARAMETER Control
		The control to theme. Usually the form itself.
	
	.PARAMETER Theme
		The color theme:
		Light
		Dark

	.PARAMETER CustomColor
		A hashtable that contains the color values.
		Keys:
		WindowColor
		ContainerColor
		BackColor
		ForeColor
		BorderColor
		SelectionForeColor
		SelectionBackColor
		MenuSelectionColor
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -Theme Dark
	
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -CustomColor @{ WindowColor = 'White'; ContainerBackColor = 'Gray'; BackColor... }
	.NOTES
		Created by SAPIEN Technologies, Inc.
#>
function Set-ControlTheme
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.ComponentModel.Component]$Control,
		[ValidateSet('Light', 'Dark')]
		[string]$Theme = 'Dark',
		[System.Collections.Hashtable]$CustomColor
	)
	
	$Font = [System.Drawing.Font]::New('Segoe UI', 9)
	
	#Initialize the colors
	if ($Theme -eq 'Dark')
	{
		$WindowColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ContainerColor = [System.Drawing.Color]::FromArgb(45, 45, 45)
		$BackColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ForeColor = [System.Drawing.Color]::White
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::DimGray
	}
	else
	{
		$WindowColor = [System.Drawing.Color]::White
		$ContainerColor = [System.Drawing.Color]::WhiteSmoke
		$BackColor = [System.Drawing.Color]::Gainsboro
		$ForeColor = [System.Drawing.Color]::Black
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::LightSteelBlue
	}
	
	if ($CustomColor)
	{
		#Check and Validate the custom colors:
		$Color = $CustomColor.WindowColor -as [System.Drawing.Color]
		if ($Color) { $WindowColor = $Color }
		$Color = $CustomColor.ContainerColor -as [System.Drawing.Color]
		if ($Color) { $ContainerColor = $Color }
		$Color = $CustomColor.BackColor -as [System.Drawing.Color]
		if ($Color) { $BackColor = $Color }
		$Color = $CustomColor.ForeColor -as [System.Drawing.Color]
		if ($Color) { $ForeColor = $Color }
		$Color = $CustomColor.BorderColor -as [System.Drawing.Color]
		if ($Color) { $BorderColor = $Color }
		$Color = $CustomColor.SelectionBackColor -as [System.Drawing.Color]
		if ($Color) { $SelectionBackColor = $Color }
		$Color = $CustomColor.SelectionForeColor -as [System.Drawing.Color]
		if ($Color) { $SelectionForeColor = $Color }
		$Color = $CustomColor.MenuSelectionColor -as [System.Drawing.Color]
		if ($Color) { $MenuSelectionColor = $Color }
	}
	
	#Define the custom renderer for the menus
	#region Add-Type definition
	try
	{
		[SAPIENTypes.SAPIENColorTable] | Out-Null
	}
	catch
	{
		if ($PSVersionTable.PSVersion.Major -ge 7)
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing', 'System.Drawing.Primitives'
		}
		else
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing'
		}
		Add-Type -ReferencedAssemblies $Assemblies -TypeDefinition "
using System;
using System.Windows.Forms;
using System.Drawing;
namespace SAPIENTypes
{
    public class SAPIENColorTable : ProfessionalColorTable
    {
        Color ContainerBackColor;
        Color BackColor;
        Color BorderColor;
		Color SelectBackColor;

        public SAPIENColorTable(Color containerColor, Color backColor, Color borderColor, Color selectBackColor)
        {
            ContainerBackColor = containerColor;
            BackColor = backColor;
            BorderColor = borderColor;
			SelectBackColor = selectBackColor;
        } 
		public override Color MenuStripGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuStripGradientEnd { get { return ContainerBackColor; } }
        public override Color ToolStripBorder { get { return BorderColor; } }
        public override Color MenuItemBorder { get { return SelectBackColor; } }
        public override Color MenuItemSelected { get { return SelectBackColor; } }
        public override Color SeparatorDark { get { return BorderColor; } }
        public override Color ToolStripDropDownBackground { get { return BackColor; } }
        public override Color MenuBorder { get { return BorderColor; } }
        public override Color MenuItemSelectedGradientBegin { get { return SelectBackColor; } }
        public override Color MenuItemSelectedGradientEnd { get { return SelectBackColor; } }      
        public override Color MenuItemPressedGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientEnd { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientMiddle { get { return ContainerBackColor; } }
        public override Color ImageMarginGradientBegin { get { return BackColor; } }
        public override Color ImageMarginGradientEnd { get { return BackColor; } }
        public override Color ImageMarginGradientMiddle { get { return BackColor; } }
    }
}"
	}
	#endregion
	
	$colorTable = New-Object SAPIENTypes.SAPIENColorTable -ArgumentList $ContainerColor, $BackColor, $BorderColor, $MenuSelectionColor
	$render = New-Object System.Windows.Forms.ToolStripProfessionalRenderer -ArgumentList $colorTable
	[System.Windows.Forms.ToolStripManager]::Renderer = $render
	
	#Set up our processing queue
	$Queue = New-Object System.Collections.Generic.Queue[System.ComponentModel.Component]
	$Queue.Enqueue($Control)
	
	Add-Type -AssemblyName System.Core
	
	#Only process the controls once.
	$Processed = New-Object System.Collections.Generic.HashSet[System.ComponentModel.Component]
	
	#Apply the colors to the controls
	while ($Queue.Count -gt 0)
	{
		$target = $Queue.Dequeue()
		
		#Skip controls we already processed
		if ($Processed.Contains($target)) { continue }
		$Processed.Add($target)
		
		#Set the text color
		$target.ForeColor = $ForeColor
		
		#region Handle Controls
		if ($target -is [System.Windows.Forms.Form])
		{
			#Set Font
			$target.Font = $Font
			$target.BackColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.SplitContainer])
		{
			$target.BackColor = $BorderColor
		}
		elseif ($target -is [System.Windows.Forms.PropertyGrid])
		{
			$target.BackColor = $BorderColor
			$target.ViewBackColor = $BackColor
			$target.ViewForeColor = $ForeColor
			$target.ViewBorderColor = $BorderColor
			$target.CategoryForeColor = $ForeColor
			$target.CategorySplitterColor = $ContainerColor
			$target.HelpBackColor = $BackColor
			$target.HelpForeColor = $ForeColor
			$target.HelpBorderColor = $BorderColor
			$target.CommandsBackColor = $BackColor
			$target.CommandsBorderColor = $BorderColor
			$target.CommandsForeColor = $ForeColor
			$target.LineColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.ContainerControl] -or
			$target -is [System.Windows.Forms.Panel])
		{
			#Set the BackColor for the container
			$target.BackColor = $ContainerColor
			
		}
		elseif ($target -is [System.Windows.Forms.GroupBox])
		{
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.Button])
		{
			$target.FlatStyle = 'Flat'
			$target.FlatAppearance.BorderColor = $BorderColor
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.CheckBox] -or
			$target -is [System.Windows.Forms.RadioButton] -or
			$target -is [System.Windows.Forms.Label])
		{
			#$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.ComboBox])
		{
			$target.BackColor = $BackColor
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.TextBox])
		{
			$target.BorderStyle = 'FixedSingle'
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.DataGridView])
		{
			$target.GridColor = $BorderColor
			$target.BackgroundColor = $ContainerColor
			$target.DefaultCellStyle.BackColor = $WindowColor
			$target.DefaultCellStyle.SelectionBackColor = $SelectionBackColor
			$target.DefaultCellStyle.SelectionForeColor = $SelectionForeColor
			$target.ColumnHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.ColumnHeadersDefaultCellStyle.ForeColor = $ForeColor
			$target.EnableHeadersVisualStyles = $false
			$target.ColumnHeadersBorderStyle = 'Single'
			$target.RowHeadersBorderStyle = 'Single'
			$target.RowHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.RowHeadersDefaultCellStyle.ForeColor = $ForeColor
			
		}
		elseif ($PSVersionTable.PSVersion.Major -le 5 -and $target -is [System.Windows.Forms.DataGrid])
		{
			$target.CaptionBackColor = $WindowColor
			$target.CaptionForeColor = $ForeColor
			$target.BackgroundColor = $ContainerColor
			$target.BackColor = $WindowColor
			$target.ForeColor = $ForeColor
			$target.HeaderBackColor = $ContainerColor
			$target.HeaderForeColor = $ForeColor
			$target.FlatMode = $true
			$target.BorderStyle = 'FixedSingle'
			$target.GridLineColor = $BorderColor
			$target.AlternatingBackColor = $ContainerColor
			$target.SelectionBackColor = $SelectionBackColor
			$target.SelectionForeColor = $SelectionForeColor
		}
		elseif ($target -is [System.Windows.Forms.ToolStrip])
		{
			
			$target.BackColor = $BackColor
			$target.Renderer = $render
			
			foreach ($item in $target.Items)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ToolStripMenuItem] -or
			$target -is [System.Windows.Forms.ToolStripDropDown] -or
			$target -is [System.Windows.Forms.ToolStripDropDownItem])
		{
			$target.BackColor = $BackColor
			foreach ($item in $target.DropDownItems)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ListBox] -or
			$target -is [System.Windows.Forms.ListView] -or
			$target -is [System.Windows.Forms.TreeView])
		{
			$target.BackColor = $WindowColor
		}
		else
		{
			$target.BackColor = $BackColor
		}
		#endregion
		
		if ($target -is [System.Windows.Forms.Control])
		{
			#Queue all the child controls
			foreach ($child in $target.Controls)
			{
				$Queue.Enqueue($child)
			}
		}
	}
}
#endregion

$labelTimeConsumedByToil_Click={
	#TODO: Place custom script here
	
}

$labelTaskPerformed_Click={
	#TODO: Place custom script here
	
}

#region Control Helper Functions
function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]
		$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ComboBox.DisplayMember = $DisplayMember
	}
	
	if ($ValueMember)
	{
		$ComboBox.ValueMember = $ValueMember
	}
}


#endregion

$timePeriodComboBox_SelectedIndexChanged={
	#Sets Variable when timePeriodComboBox is changed
	$timePeriod = $timePeriodComboBox.Text
}

$fileToolStripMenuItem_Click={
	#TODO: Place custom script here
	
}

$exitToolStripMenuItem_Click={
	#Closes form when Exit Menu Item Clicked
	$formAutoMate.Close()
}

$timePreferenceComboBox_SelectedIndexChanged={
	#TODO: Place custom script here
	$timePreference = $timePreferenceComboBox.Text
}

$numOfTasksTextBox_TextChanged={
	#Sets Variable when numOfTasksTextBox is changed
	$numOfTasks = $numOfTasksTextBox.Text
}

$timeConsumedTextBox_TextChanged={
	#Sets Variable to timeConsumedTextBox text value
	$timeConsumed = $timeConsumedTextBox.Text
}

$buttonIsItWorthTheTime_Click = {
	
	$timePeriod = $timePeriodComboBox.Text
	$timePreference = $timePreferenceComboBox.Text
	$numOfTasks = $numOfTasksTextBox.Text
	$timeConsumed = $timeConsumedTextBox.Text
	
	Switch ($timePreference)
	{
		{ $_ -eq 'Seconds' } { $timeConsumedInSeconds = $timeConsumedTextBox.Text }
		{ $_ -eq 'Minutes' } { $timeConsumedInSeconds = [int64]$timeConsumedTextBox.Text * 60 }
		{ $_ -eq 'Hours' } { $timeConsumedInSeconds = [int64]$timeConsumedTextBox.Text * 60 * 60 }
		{ $_ -eq 'Days' } { $timeConsumedInSeconds = [int64]$timeConsumedTextBox.Text * 24 * 60 * 60 }
	}
	Switch ($timePeriod)
	{
		{ $_ -eq 'Day' } { $tasksPerYear = [int64]$numOfTasksTextBox.Text * 365 }
		{ $_ -eq 'Week' } { $tasksPerYear = [int64]$numOfTasksTextBox.Text * 52 }
		{ $_ -eq 'Month' } { $tasksPerYear = [int64]$numOfTasksTextBox.Text * 12 }
		{ $_ -eq 'Year' } { $tasksPerYear = [int64]$numOfTasksTextBox.Text }
	}
	
	[int64]$totalTimeConsumed = [int64]$timeConsumedInSeconds * [int64]$tasksPerYear
	
	Switch ($totalTimeConsumed) {
		{ $_ -ge 86400 } { $richtextboxResults.Text = "WORTH IT!!! As long as you spend less than $totalTimeConsumed seconds on this task for each year the task will be performed." }
		{ $_ -lt 86400 } { $richtextboxResults.Text = "PROBABLY NOT WORTH IT!!! If you Automate it anyway try to spend less than $totalTimeConsumed seconds on this task for each year the task will be performed." }
	}
}]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>