<File version="3.2">
  <FileID>4952fd81-5924-48a7-be68-0859074cbcd2</FileID>
  <Preview>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
3/3d/w99TpX1HPc2RAAAAABJRU5ErkJggg==</Preview>
  <Form>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
7+4/zBNIwSA1AAA=</Form>
  <Code><![CDATA[
$formAutoMate_Load={
	#TODO: Initialize Form Controls here
	Set-ControlTheme $formAutoMate -Theme Dark
}

$darkToolStripMenuItem_Click={
	#TODO: Place custom script here
	Set-ControlTheme -Control $formAutoMate -Theme Dark
}

$lightToolStripMenuItem_Click={
	Set-ControlTheme -Control $formAutoMate -Theme Light
}

#region Control Theme Helper Function
<#
	.SYNOPSIS
		Applies a theme to the control and its children.
	
	.PARAMETER Control
		The control to theme. Usually the form itself.
	
	.PARAMETER Theme
		The color theme:
		Light
		Dark

	.PARAMETER CustomColor
		A hashtable that contains the color values.
		Keys:
		WindowColor
		ContainerColor
		BackColor
		ForeColor
		BorderColor
		SelectionForeColor
		SelectionBackColor
		MenuSelectionColor
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -Theme Dark
	
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -CustomColor @{ WindowColor = 'White'; ContainerBackColor = 'Gray'; BackColor... }
	.NOTES
		Created by SAPIEN Technologies, Inc.
#>
function Set-ControlTheme
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.ComponentModel.Component]$Control,
		[ValidateSet('Light', 'Dark')]
		[string]$Theme = 'Dark',
		[System.Collections.Hashtable]$CustomColor
	)
	
	$Font = [System.Drawing.Font]::New('Segoe UI', 9)
	
	#Initialize the colors
	if ($Theme -eq 'Dark')
	{
		$WindowColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ContainerColor = [System.Drawing.Color]::FromArgb(45, 45, 45)
		$BackColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ForeColor = [System.Drawing.Color]::White
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::DimGray
	}
	else
	{
		$WindowColor = [System.Drawing.Color]::White
		$ContainerColor = [System.Drawing.Color]::WhiteSmoke
		$BackColor = [System.Drawing.Color]::Gainsboro
		$ForeColor = [System.Drawing.Color]::Black
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::LightSteelBlue
	}
	
	if ($CustomColor)
	{
		#Check and Validate the custom colors:
		$Color = $CustomColor.WindowColor -as [System.Drawing.Color]
		if ($Color) { $WindowColor = $Color }
		$Color = $CustomColor.ContainerColor -as [System.Drawing.Color]
		if ($Color) { $ContainerColor = $Color }
		$Color = $CustomColor.BackColor -as [System.Drawing.Color]
		if ($Color) { $BackColor = $Color }
		$Color = $CustomColor.ForeColor -as [System.Drawing.Color]
		if ($Color) { $ForeColor = $Color }
		$Color = $CustomColor.BorderColor -as [System.Drawing.Color]
		if ($Color) { $BorderColor = $Color }
		$Color = $CustomColor.SelectionBackColor -as [System.Drawing.Color]
		if ($Color) { $SelectionBackColor = $Color }
		$Color = $CustomColor.SelectionForeColor -as [System.Drawing.Color]
		if ($Color) { $SelectionForeColor = $Color }
		$Color = $CustomColor.MenuSelectionColor -as [System.Drawing.Color]
		if ($Color) { $MenuSelectionColor = $Color }
	}
	
	#Define the custom renderer for the menus
	#region Add-Type definition
	try
	{
		[SAPIENTypes.SAPIENColorTable] | Out-Null
	}
	catch
	{
		if ($PSVersionTable.PSVersion.Major -ge 7)
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing', 'System.Drawing.Primitives'
		}
		else
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing'
		}
		Add-Type -ReferencedAssemblies $Assemblies -TypeDefinition "
using System;
using System.Windows.Forms;
using System.Drawing;
namespace SAPIENTypes
{
    public class SAPIENColorTable : ProfessionalColorTable
    {
        Color ContainerBackColor;
        Color BackColor;
        Color BorderColor;
		Color SelectBackColor;

        public SAPIENColorTable(Color containerColor, Color backColor, Color borderColor, Color selectBackColor)
        {
            ContainerBackColor = containerColor;
            BackColor = backColor;
            BorderColor = borderColor;
			SelectBackColor = selectBackColor;
        } 
		public override Color MenuStripGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuStripGradientEnd { get { return ContainerBackColor; } }
        public override Color ToolStripBorder { get { return BorderColor; } }
        public override Color MenuItemBorder { get { return SelectBackColor; } }
        public override Color MenuItemSelected { get { return SelectBackColor; } }
        public override Color SeparatorDark { get { return BorderColor; } }
        public override Color ToolStripDropDownBackground { get { return BackColor; } }
        public override Color MenuBorder { get { return BorderColor; } }
        public override Color MenuItemSelectedGradientBegin { get { return SelectBackColor; } }
        public override Color MenuItemSelectedGradientEnd { get { return SelectBackColor; } }      
        public override Color MenuItemPressedGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientEnd { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientMiddle { get { return ContainerBackColor; } }
        public override Color ImageMarginGradientBegin { get { return BackColor; } }
        public override Color ImageMarginGradientEnd { get { return BackColor; } }
        public override Color ImageMarginGradientMiddle { get { return BackColor; } }
    }
}"
	}
	#endregion
	
	$colorTable = New-Object SAPIENTypes.SAPIENColorTable -ArgumentList $ContainerColor, $BackColor, $BorderColor, $MenuSelectionColor
	$render = New-Object System.Windows.Forms.ToolStripProfessionalRenderer -ArgumentList $colorTable
	[System.Windows.Forms.ToolStripManager]::Renderer = $render
	
	#Set up our processing queue
	$Queue = New-Object System.Collections.Generic.Queue[System.ComponentModel.Component]
	$Queue.Enqueue($Control)
	
	Add-Type -AssemblyName System.Core
	
	#Only process the controls once.
	$Processed = New-Object System.Collections.Generic.HashSet[System.ComponentModel.Component]
	
	#Apply the colors to the controls
	while ($Queue.Count -gt 0)
	{
		$target = $Queue.Dequeue()
		
		#Skip controls we already processed
		if ($Processed.Contains($target)) { continue }
		$Processed.Add($target)
		
		#Set the text color
		$target.ForeColor = $ForeColor
		
		#region Handle Controls
		if ($target -is [System.Windows.Forms.Form])
		{
			#Set Font
			$target.Font = $Font
			$target.BackColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.SplitContainer])
		{
			$target.BackColor = $BorderColor
		}
		elseif ($target -is [System.Windows.Forms.PropertyGrid])
		{
			$target.BackColor = $BorderColor
			$target.ViewBackColor = $BackColor
			$target.ViewForeColor = $ForeColor
			$target.ViewBorderColor = $BorderColor
			$target.CategoryForeColor = $ForeColor
			$target.CategorySplitterColor = $ContainerColor
			$target.HelpBackColor = $BackColor
			$target.HelpForeColor = $ForeColor
			$target.HelpBorderColor = $BorderColor
			$target.CommandsBackColor = $BackColor
			$target.CommandsBorderColor = $BorderColor
			$target.CommandsForeColor = $ForeColor
			$target.LineColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.ContainerControl] -or
			$target -is [System.Windows.Forms.Panel])
		{
			#Set the BackColor for the container
			$target.BackColor = $ContainerColor
			
		}
		elseif ($target -is [System.Windows.Forms.GroupBox])
		{
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.Button])
		{
			$target.FlatStyle = 'Flat'
			$target.FlatAppearance.BorderColor = $BorderColor
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.CheckBox] -or
			$target -is [System.Windows.Forms.RadioButton] -or
			$target -is [System.Windows.Forms.Label])
		{
			#$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.ComboBox])
		{
			$target.BackColor = $BackColor
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.TextBox])
		{
			$target.BorderStyle = 'FixedSingle'
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.DataGridView])
		{
			$target.GridColor = $BorderColor
			$target.BackgroundColor = $ContainerColor
			$target.DefaultCellStyle.BackColor = $WindowColor
			$target.DefaultCellStyle.SelectionBackColor = $SelectionBackColor
			$target.DefaultCellStyle.SelectionForeColor = $SelectionForeColor
			$target.ColumnHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.ColumnHeadersDefaultCellStyle.ForeColor = $ForeColor
			$target.EnableHeadersVisualStyles = $false
			$target.ColumnHeadersBorderStyle = 'Single'
			$target.RowHeadersBorderStyle = 'Single'
			$target.RowHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.RowHeadersDefaultCellStyle.ForeColor = $ForeColor
			
		}
		elseif ($PSVersionTable.PSVersion.Major -le 5 -and $target -is [System.Windows.Forms.DataGrid])
		{
			$target.CaptionBackColor = $WindowColor
			$target.CaptionForeColor = $ForeColor
			$target.BackgroundColor = $ContainerColor
			$target.BackColor = $WindowColor
			$target.ForeColor = $ForeColor
			$target.HeaderBackColor = $ContainerColor
			$target.HeaderForeColor = $ForeColor
			$target.FlatMode = $true
			$target.BorderStyle = 'FixedSingle'
			$target.GridLineColor = $BorderColor
			$target.AlternatingBackColor = $ContainerColor
			$target.SelectionBackColor = $SelectionBackColor
			$target.SelectionForeColor = $SelectionForeColor
		}
		elseif ($target -is [System.Windows.Forms.ToolStrip])
		{
			
			$target.BackColor = $BackColor
			$target.Renderer = $render
			
			foreach ($item in $target.Items)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ToolStripMenuItem] -or
			$target -is [System.Windows.Forms.ToolStripDropDown] -or
			$target -is [System.Windows.Forms.ToolStripDropDownItem])
		{
			$target.BackColor = $BackColor
			foreach ($item in $target.DropDownItems)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ListBox] -or
			$target -is [System.Windows.Forms.ListView] -or
			$target -is [System.Windows.Forms.TreeView])
		{
			$target.BackColor = $WindowColor
		}
		else
		{
			$target.BackColor = $BackColor
		}
		#endregion
		
		if ($target -is [System.Windows.Forms.Control])
		{
			#Queue all the child controls
			foreach ($child in $target.Controls)
			{
				$Queue.Enqueue($child)
			}
		}
	}
}
#endregion

$labelTimeConsumedByToil_Click={
	#TODO: Place custom script here
	
}

$labelTaskPerformed_Click={
	#TODO: Place custom script here
	
}

#region Control Helper Functions
function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]
		$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ComboBox.DisplayMember = $DisplayMember
	}
	
	if ($ValueMember)
	{
		$ComboBox.ValueMember = $ValueMember
	}
}


#endregion

$timePeriodComboBox_SelectedIndexChanged={
	#Sets Variable when timePeriodComboBox is changed
	$timePeriod = $timePeriodComboBox.Text
}

$fileToolStripMenuItem_Click={
	#TODO: Place custom script here
	
}

$exitToolStripMenuItem_Click={
	#Closes form when Exit Menu Item Clicked
	$formAutoMate.Close()
}

$timePreferenceComboBox_SelectedIndexChanged={
	#TODO: Place custom script here
	$timePreference = $timePreferenceComboBox.Text
}

$numOfTasksTextBox_TextChanged={
	#Sets Variable when numOfTasksTextBox is changed
	$numOfTasks = $numOfTasksTextBox.Text
}

$timeConsumedTextBox_TextChanged={
	#Sets Variable to timeConsumedTextBox text value
	$timeConsumed = $timeConsumedTextBox.Text
}

$buttonIsItWorthTheTime_Click = {
	
	$timePeriod = $timePeriodComboBox.Text
	$timePreference = $timePreferenceComboBox.Text
	$numOfTasks = $numOfTasksTextBox.Text
	$timeConsumed = $timeConsumedTextBox.Text
	
	Switch ($timePreference)
	{
		{ $_ -eq 'Seconds' } { $timeConsumedInSeconds = $timeConsumedTextBox.Text }
		{ $_ -eq 'Minutes' } { $timeConsumedInSeconds = [int64]$timeConsumedTextBox.Text * 60 }
		{ $_ -eq 'Hours' } { $timeConsumedInSeconds = [int64]$timeConsumedTextBox.Text * 60 * 60 }
		{ $_ -eq 'Days' } { $timeConsumedInSeconds = [int64]$timeConsumedTextBox.Text * 24 * 60 * 60 }
	}
	Switch ($timePeriod)
	{
		{ $_ -eq 'Day' } { $tasksPerYear = [int64]$numOfTasksTextBox.Text * 365 }
		{ $_ -eq 'Week' } { $tasksPerYear = [int64]$numOfTasksTextBox.Text * 52 }
		{ $_ -eq 'Month' } { $tasksPerYear = [int64]$numOfTasksTextBox.Text * 12 }
		{ $_ -eq 'Year' } { $tasksPerYear = [int64]$numOfTasksTextBox.Text }
	}
	
	[int64]$totalTimeConsumed = [int64]$timeConsumedInSeconds * [int64]$tasksPerYear
	
	Switch ($totalTimeConsumed) {
		{ $_ -ge 86400 } { $richtextboxResults.Text = "WORTH IT!!! As long as you spend less than $totalTimeConsumed seconds on this task for each year the task will be performed." }
		{ $_ -lt 86400 } { $richtextboxResults.Text = "PROBABLY NOT WORTH IT!!! If you Automate it anyway try to spend less than $totalTimeConsumed seconds on this task for each year the task will be performed." }
	}
}
$linklabelHttpsxkcdcom1205_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.LinkLabelLinkClickedEventArgs]
	#TODO: Place custom script here
	$ieObject = New-Object -ComObject 'InternetExplorer.Application'
	$ieObject.Visible = $true
	$ieObject.Navigate('https://xkcd.com/1205/')
}
]]></Code>
  <Mode>0</Mode>
  <Assemblies />
</File>