<File version="3.2">
  <FileID>4952fd81-5924-48a7-be68-0859074cbcd2</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAHV1SURBVHhe7f0FmBxXmq0L99wz9zz3n7m3Z6Y9
1GdOj912g9stkyxblkUWW1Qii5mZmZmZmaUilUrFzMzMzMxZTOvfO7JKKpVCsuTTTkGu18/rUmVG
7NgZEZXf2pERkb8ihBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEELI
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
SinVQxkAKKWUUj1U5wFALrRKLFQumFJKKaWvx6qqCpSJmqyzAFBSJhYoEodMHZRSSil9PcriXyxq
8i8eANqVC6KUUkrpm6Farf5FAoB8nFJKKaVvhs+r1X/zAEAppZTSN1sGAEoppVQPZQCglFJK9dCf
HQCyRQCIydI2QCmllNK3S1nD818pAEyaXJaeXYjqFiC/slVJD5RSSil9u5Q1vB5AVGzSywWAH38c
3+Ti5o3I6AQlNVBKKaX07TQqJglWNg4YOXJkfluZfz7Dhw8PHT16dLJMC5RSSil9ux0zZkyyqO0u
bWWeEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCE65Ve/
+v8DM/J1zwNgFj4AAAAASUVORK5CYII=</Preview>
  <Form>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
HPqVfwAg8iY3TioAAA==</Form>
  <Code><![CDATA[
$formAutoMate_Load={
	#TODO: Initialize Form Controls here
	Set-ControlTheme $formAutoMate -Theme Dark
}

$darkToolStripMenuItem_Click={
	#TODO: Place custom script here
	Set-ControlTheme -Control $formAutoMate -Theme Dark
}

$lightToolStripMenuItem_Click={
	Set-ControlTheme -Control $formAutoMate -Theme Light
}

#region Control Theme Helper Function
<#
	.SYNOPSIS
		Applies a theme to the control and its children.
	
	.PARAMETER Control
		The control to theme. Usually the form itself.
	
	.PARAMETER Theme
		The color theme:
		Light
		Dark

	.PARAMETER CustomColor
		A hashtable that contains the color values.
		Keys:
		WindowColor
		ContainerColor
		BackColor
		ForeColor
		BorderColor
		SelectionForeColor
		SelectionBackColor
		MenuSelectionColor
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -Theme Dark
	
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -CustomColor @{ WindowColor = 'White'; ContainerBackColor = 'Gray'; BackColor... }
	.NOTES
		Created by SAPIEN Technologies, Inc.
#>
function Set-ControlTheme
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.ComponentModel.Component]$Control,
		[ValidateSet('Light', 'Dark')]
		[string]$Theme = 'Dark',
		[System.Collections.Hashtable]$CustomColor
	)
	
	$Font = [System.Drawing.Font]::New('Segoe UI', 9)
	
	#Initialize the colors
	if ($Theme -eq 'Dark')
	{
		$WindowColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ContainerColor = [System.Drawing.Color]::FromArgb(45, 45, 45)
		$BackColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ForeColor = [System.Drawing.Color]::White
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::DimGray
	}
	else
	{
		$WindowColor = [System.Drawing.Color]::White
		$ContainerColor = [System.Drawing.Color]::WhiteSmoke
		$BackColor = [System.Drawing.Color]::Gainsboro
		$ForeColor = [System.Drawing.Color]::Black
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::LightSteelBlue
	}
	
	if ($CustomColor)
	{
		#Check and Validate the custom colors:
		$Color = $CustomColor.WindowColor -as [System.Drawing.Color]
		if ($Color) { $WindowColor = $Color }
		$Color = $CustomColor.ContainerColor -as [System.Drawing.Color]
		if ($Color) { $ContainerColor = $Color }
		$Color = $CustomColor.BackColor -as [System.Drawing.Color]
		if ($Color) { $BackColor = $Color }
		$Color = $CustomColor.ForeColor -as [System.Drawing.Color]
		if ($Color) { $ForeColor = $Color }
		$Color = $CustomColor.BorderColor -as [System.Drawing.Color]
		if ($Color) { $BorderColor = $Color }
		$Color = $CustomColor.SelectionBackColor -as [System.Drawing.Color]
		if ($Color) { $SelectionBackColor = $Color }
		$Color = $CustomColor.SelectionForeColor -as [System.Drawing.Color]
		if ($Color) { $SelectionForeColor = $Color }
		$Color = $CustomColor.MenuSelectionColor -as [System.Drawing.Color]
		if ($Color) { $MenuSelectionColor = $Color }
	}
	
	#Define the custom renderer for the menus
	#region Add-Type definition
	try
	{
		[SAPIENTypes.SAPIENColorTable] | Out-Null
	}
	catch
	{
		if ($PSVersionTable.PSVersion.Major -ge 7)
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing', 'System.Drawing.Primitives'
		}
		else
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing'
		}
		Add-Type -ReferencedAssemblies $Assemblies -TypeDefinition "
using System;
using System.Windows.Forms;
using System.Drawing;
namespace SAPIENTypes
{
    public class SAPIENColorTable : ProfessionalColorTable
    {
        Color ContainerBackColor;
        Color BackColor;
        Color BorderColor;
		Color SelectBackColor;

        public SAPIENColorTable(Color containerColor, Color backColor, Color borderColor, Color selectBackColor)
        {
            ContainerBackColor = containerColor;
            BackColor = backColor;
            BorderColor = borderColor;
			SelectBackColor = selectBackColor;
        } 
		public override Color MenuStripGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuStripGradientEnd { get { return ContainerBackColor; } }
        public override Color ToolStripBorder { get { return BorderColor; } }
        public override Color MenuItemBorder { get { return SelectBackColor; } }
        public override Color MenuItemSelected { get { return SelectBackColor; } }
        public override Color SeparatorDark { get { return BorderColor; } }
        public override Color ToolStripDropDownBackground { get { return BackColor; } }
        public override Color MenuBorder { get { return BorderColor; } }
        public override Color MenuItemSelectedGradientBegin { get { return SelectBackColor; } }
        public override Color MenuItemSelectedGradientEnd { get { return SelectBackColor; } }      
        public override Color MenuItemPressedGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientEnd { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientMiddle { get { return ContainerBackColor; } }
        public override Color ImageMarginGradientBegin { get { return BackColor; } }
        public override Color ImageMarginGradientEnd { get { return BackColor; } }
        public override Color ImageMarginGradientMiddle { get { return BackColor; } }
    }
}"
	}
	#endregion
	
	$colorTable = New-Object SAPIENTypes.SAPIENColorTable -ArgumentList $ContainerColor, $BackColor, $BorderColor, $MenuSelectionColor
	$render = New-Object System.Windows.Forms.ToolStripProfessionalRenderer -ArgumentList $colorTable
	[System.Windows.Forms.ToolStripManager]::Renderer = $render
	
	#Set up our processing queue
	$Queue = New-Object System.Collections.Generic.Queue[System.ComponentModel.Component]
	$Queue.Enqueue($Control)
	
	Add-Type -AssemblyName System.Core
	
	#Only process the controls once.
	$Processed = New-Object System.Collections.Generic.HashSet[System.ComponentModel.Component]
	
	#Apply the colors to the controls
	while ($Queue.Count -gt 0)
	{
		$target = $Queue.Dequeue()
		
		#Skip controls we already processed
		if ($Processed.Contains($target)) { continue }
		$Processed.Add($target)
		
		#Set the text color
		$target.ForeColor = $ForeColor
		
		#region Handle Controls
		if ($target -is [System.Windows.Forms.Form])
		{
			#Set Font
			$target.Font = $Font
			$target.BackColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.SplitContainer])
		{
			$target.BackColor = $BorderColor
		}
		elseif ($target -is [System.Windows.Forms.PropertyGrid])
		{
			$target.BackColor = $BorderColor
			$target.ViewBackColor = $BackColor
			$target.ViewForeColor = $ForeColor
			$target.ViewBorderColor = $BorderColor
			$target.CategoryForeColor = $ForeColor
			$target.CategorySplitterColor = $ContainerColor
			$target.HelpBackColor = $BackColor
			$target.HelpForeColor = $ForeColor
			$target.HelpBorderColor = $BorderColor
			$target.CommandsBackColor = $BackColor
			$target.CommandsBorderColor = $BorderColor
			$target.CommandsForeColor = $ForeColor
			$target.LineColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.ContainerControl] -or
			$target -is [System.Windows.Forms.Panel])
		{
			#Set the BackColor for the container
			$target.BackColor = $ContainerColor
			
		}
		elseif ($target -is [System.Windows.Forms.GroupBox])
		{
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.Button])
		{
			$target.FlatStyle = 'Flat'
			$target.FlatAppearance.BorderColor = $BorderColor
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.CheckBox] -or
			$target -is [System.Windows.Forms.RadioButton] -or
			$target -is [System.Windows.Forms.Label])
		{
			#$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.ComboBox])
		{
			$target.BackColor = $BackColor
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.TextBox])
		{
			$target.BorderStyle = 'FixedSingle'
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.DataGridView])
		{
			$target.GridColor = $BorderColor
			$target.BackgroundColor = $ContainerColor
			$target.DefaultCellStyle.BackColor = $WindowColor
			$target.DefaultCellStyle.SelectionBackColor = $SelectionBackColor
			$target.DefaultCellStyle.SelectionForeColor = $SelectionForeColor
			$target.ColumnHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.ColumnHeadersDefaultCellStyle.ForeColor = $ForeColor
			$target.EnableHeadersVisualStyles = $false
			$target.ColumnHeadersBorderStyle = 'Single'
			$target.RowHeadersBorderStyle = 'Single'
			$target.RowHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.RowHeadersDefaultCellStyle.ForeColor = $ForeColor
			
		}
		elseif ($PSVersionTable.PSVersion.Major -le 5 -and $target -is [System.Windows.Forms.DataGrid])
		{
			$target.CaptionBackColor = $WindowColor
			$target.CaptionForeColor = $ForeColor
			$target.BackgroundColor = $ContainerColor
			$target.BackColor = $WindowColor
			$target.ForeColor = $ForeColor
			$target.HeaderBackColor = $ContainerColor
			$target.HeaderForeColor = $ForeColor
			$target.FlatMode = $true
			$target.BorderStyle = 'FixedSingle'
			$target.GridLineColor = $BorderColor
			$target.AlternatingBackColor = $ContainerColor
			$target.SelectionBackColor = $SelectionBackColor
			$target.SelectionForeColor = $SelectionForeColor
		}
		elseif ($target -is [System.Windows.Forms.ToolStrip])
		{
			
			$target.BackColor = $BackColor
			$target.Renderer = $render
			
			foreach ($item in $target.Items)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ToolStripMenuItem] -or
			$target -is [System.Windows.Forms.ToolStripDropDown] -or
			$target -is [System.Windows.Forms.ToolStripDropDownItem])
		{
			$target.BackColor = $BackColor
			foreach ($item in $target.DropDownItems)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ListBox] -or
			$target -is [System.Windows.Forms.ListView] -or
			$target -is [System.Windows.Forms.TreeView])
		{
			$target.BackColor = $WindowColor
		}
		else
		{
			$target.BackColor = $BackColor
		}
		#endregion
		
		if ($target -is [System.Windows.Forms.Control])
		{
			#Queue all the child controls
			foreach ($child in $target.Controls)
			{
				$Queue.Enqueue($child)
			}
		}
	}
}
#endregion

$labelTimeConsumedByToil_Click={
	#TODO: Place custom script here
	
}

$labelTaskPerformed_Click={
	#TODO: Place custom script here
	
}

#region Control Helper Functions
function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]
		$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ComboBox.DisplayMember = $DisplayMember
	}
	
	if ($ValueMember)
	{
		$ComboBox.ValueMember = $ValueMember
	}
}


#endregion

$timePeriodComboBox_SelectedIndexChanged={
	#Sets Variable when timePeriodComboBox is changed
	$timePreference = $timePeriodComboBox.Text
}

$fileToolStripMenuItem_Click={
	#TODO: Place custom script here
	
}

$exitToolStripMenuItem_Click={
	#Closes form when Exit Menu Item Clicked
	$formAutoMate.Close()
}

$timePreferenceComboBox_SelectedIndexChanged={
	#TODO: Place custom script here
	$timePreference = $timePreferenceComboBox.Text
}

$numOfTasksTextBox_TextChanged={
	#Sets Variable when numOfTasksTextBox is changed
	$numOfTasks = $numOfTasksTextBox.Text
}

$timeConsumedTextBox_TextChanged={
	#Sets Variable to timeConsumedTextBox text value
	$timeConsumed = $timeConsumedTextBox.Text
}

$buttonIsItWorthMyTime_Click={
	If ($timePreference -eq 'Seconds')
	{
		$totalTimeConsumed = $timeConsumedTextBox.Text
	}
	If ($timePreference -eq 'Minutes')
	{
		$totalTimeConsumed = $timeConsumedTextBox.Text * 60
	}
	If ($timePreference -eq 'Hours')
	{
		$totalTimeConsumed = $timeConsumedTextBox.Text * 60 * 60
	}
	If ($timePreference -eq 'Days')
	{
		$totalTimeConsumed = $timeConsumedTextBox.Text * 24 * 60 * 60
	}
}
]]></Code>
  <Mode>0</Mode>
  <Assemblies />
</File>